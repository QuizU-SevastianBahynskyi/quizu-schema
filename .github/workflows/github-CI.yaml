name: Build and Publish

# if the workflow is triggered manually, the package will force published
on:
  workflow_dispatch:
  repository_dispatch:
    types: [update-schema]

jobs:
  summarize:
    runs-on: ubuntu-latest
    steps:
      - name: Log the trigger source
        run: |
          echo "Triggered by event type [${{ github.event_name }}]"

          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            echo "Triggered by repository [${{ github.event.client_payload.triggered_by.repository }}]"
            echo "On commit [${{ github.event.client_payload.triggered_by.commit_sha }}]"
            echo "The link to commit: ${{ github.event.client_payload.triggered_by.commit_link }}"
          else
            echo "Triggered manually. This means that package will be published, even if no changes were made."
          fi

  update_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull the latest changes
        run: git pull origin main

      - name: Identify the update type
        run: ./identify_update_type.sh

      - name: Increment version
        run: ./update_version.sh

      - name: Commit and push the updated version
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@example.com"
          git add .
          git commit -m "Update version to $NEW_VERSION [skip ci]"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{github.repository}}.git HEAD:main

  build_java:
    runs-on: ubuntu-latest
    needs: update_version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "adopt"

      - name: Build with Gradle
        run: chmod +x gradle/gradlew && cd gradle && ./gradlew build
        env:
          VERSION: ${{ needs.increment_version.outputs.version }}

      - name: Release maven package
        run: |
          echo "Publishing version $VERSION"
          chmod +x gradle/gradlew && cd gradle && ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          GITHUB_ACTOR: ${{ github.actor }}
          VERSION: ${{ needs.increment_version.outputs.version }}

  build_node:
    runs-on: ubuntu-latest
    needs: update_version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "adopt"

      - name: Install packages and generate schema
        run: |
          npm install -g @openapitools/openapi-generator-cli
          openapi-generator-cli generate -i ./openapi/openapi.yaml -g typescript-axios -o node/quizu-schema

      - name: Prepare package for publishing
        run: |
          cp node/package.json node/quizu-schema 
          cd node/quizu-schema
          echo "Version: ${{ needs.increment_version.outputs.version }}"
          npm version ${{ needs.increment_version.outputs.version }} --no-git-tag-version

      - name: Publish package
        run: |
          cd node/quizu-schema
          npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
