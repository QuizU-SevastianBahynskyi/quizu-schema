name: Build and Publish

on:
  workflow_dispatch:
  repository_dispatch:
    types: [ update-schema ]

jobs:
  log_trigger_source:
    runs-on: ubuntu-latest
    steps:
      - name: Log the trigger source
        run: |
          echo "Triggered by repository [${{ github.event.client_payload.triggered_by.repository }}]"
          echo "On commit [${{ github.event.client_payload.triggered_by.commit_sha }}]"
          echo "The link to commit: ${{ github.event.client_payload.triggered_by.commit_link }}"

  increment_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.increment_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4


      - name: Increment version
        id: increment_version
        run: |
          chmod +x increment_version.sh
          VERSION=$(./increment_version.sh patch)
          echo "The version here: $VERSION;"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
  

  push_new_version:
    runs-on: ubuntu-latest
    needs: increment_version
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Update VERSION file
        run: |
          git pull
          VERSION=${{ needs.increment_version.outputs.version }}
          echo "New version should be: $VERSION"
          echo "$VERSION" > "VERSION"
      

      - name: Commit and push updated VERSION file
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@example.com"
          git add .
          git commit -m "Update version to ${{ needs.increment_version.outputs.version }} [skip ci]"
          git push https://${{ secrets.ACCESS_TOKEN }}@github.com/QuizU-SevastianBahynskyi/quizu-schema.git HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  build_java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Build with Gradle
        run: chmod +x gradle/gradlew && cd gradle && ./gradlew build
        env:
          VERSION: ${{ needs.increment_version.outputs.version }}

      - name: Release maven package
        run: |
          echo "Publishing version $VERSION"
          chmod +x gradle/gradlew && cd gradle && ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.QUIZ_GITHUB_PACKAGES_TOKEN }}
          GITHUB_ACTOR: ${{ github.QUIZ_GITHUB_ACTOR }}
          VERSION: ${{ needs.increment_version.outputs.version }}

  build_node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@QuizU-SevastianBahynskyi'
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Install packages and generate schema
        run: |
          npm install -g @openapitools/openapi-generator-cli
          openapi-generator-cli generate -i ./openapi/openapi.yaml -g typescript-axios -o node/quizu-schema

      - name: Prepare package for publishing
        run: |
          cp node/package.json node/quizu-schema 
          cd node/quizu-schema
          npm version ${{ needs.increment_version.outputs.version }} --no-git-tag-version

      - name: Publish package
        run: |
          cd node/quizu-schema
          npm publish --registry https://npm.pkg.github.com
        env:
          NODE_AUTH_TOKEN: ${{ secrets.QUIZ_GITHUB_PACKAGES_TOKEN }}
